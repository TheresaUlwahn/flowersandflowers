{"ast":null,"code":"import _slicedToArray from \"/Users/theresaulwahn/Desktop/flowersandflowers/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/theresaulwahn/Desktop/flowersandflowers/frontend/src/pages/FlowerInfo.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport './flowerinfo.css';\nimport { FlowerForm } from './FlowerForm';\nimport { FlowerMessage } from './FlowerMessage';\nconst url = \"https://flowers-mock-data.firebaseio.com/comments/TheresaUlwahn\";\nexport const FlowerInfo = () => {\n  const _useParams = useParams(),\n        flowerId = _useParams.flowerId;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        flower = _useState2[0],\n        setFlower = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        flowerMessages = _useState4[0],\n        setFlowerMessages = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        postedMessage = _useState6[0],\n        setPostedMessage = _useState6[1];\n\n  useEffect(() => {\n    fetch(`https://flowers-mock-data.firebaseio.com/flowers/${flowerId}.json`).then(res => res.json()).then(json => {\n      setFlower(json);\n    });\n  }, [flowerId]);\n  useEffect(() => {\n    fetch(`https://flowers-mock-data.firebaseio.com/comments/TheresaUlwahn/${flowerId}.json`).then(res => res.json()).then(json => {\n      // console.log('All messages for the flower: ', json)\n      if (json !== null) {\n        setFlowerMessages(json);\n      }\n    });\n  }, [postedMessage]);\n\n  const handleFormSubmit = (flowerId, message) => {\n    console.log('POSTA DET HÄR MEDDELANDET: ', message, 'FÖR BLOMMA: ', flowerId);\n    fetch(url + `/${flowerId}/.json`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        message\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(() => {\n      console.log('postat!');\n      window.location.reload();\n    }).catch(err => console.log(\"error:\", err));\n  };\n\n  var result = Object.keys(flowerMessages).map(function (key) {\n    return [key, flowerMessages[key]];\n  });\n  return React.createElement(\"section\", {\n    className: \"infoContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"backDrop\",\n    style: {\n      backgroundImage: `url(${flower.cover_image})`\n    },\n    alt: flower.latin_name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: \"backLink\",\n    to: `/`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"svg\", {\n    className: \"backLinkImg\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 30 30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"path\", {\n    d: \"M27 14.5C27 7.596441 21.4035594 2 14.5 2S2 7.596441 2 14.5 7.5964406 27 14.5 27 27 21.403559 27 14.5zm-19.3388348-.353553l7.4852814-7.485282c.1952622-.195262.5118446-.195262.7071068 0l2.1213203 2.121321c.1952622.195262.1952622.511844 0 .707106L12.9644661 14.5l5.0104076 5.010408c.1952622.195262.1952622.511844 0 .707106l-2.1213203 2.121321c-.1952622.195262-.5118446.195262-.7071068 0l-7.4852814-7.485282c-.19799-.19799-.197989-.509117 0-.707106z\",\n    fill: \"#fff\",\n    fillRule: \"evenodd\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"All flowers\")), React.createElement(\"div\", {\n    className: \"infoBox\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"titleInfo\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"flowerTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, flower.common_name, React.createElement(\"p\", {\n    className: \"flowerVotes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, flower.notes)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, flower.blooming_season)), React.createElement(FlowerForm, {\n    className: \"flowerForm\",\n    onFormSubmit: handleFormSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), result.map(flowerMessage => React.createElement(FlowerMessage, {\n    key: flowerMessage[0],\n    flowerMessage: flowerMessage[1],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/Users/theresaulwahn/Desktop/flowersandflowers/frontend/src/pages/FlowerInfo.js"],"names":["React","useEffect","useState","useParams","Link","FlowerForm","FlowerMessage","url","FlowerInfo","flowerId","flower","setFlower","flowerMessages","setFlowerMessages","postedMessage","setPostedMessage","fetch","then","res","json","handleFormSubmit","message","console","log","method","body","JSON","stringify","headers","window","location","reload","catch","err","result","Object","keys","map","key","backgroundImage","cover_image","latin_name","common_name","notes","blooming_season","flowerMessage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport './flowerinfo.css'\nimport { FlowerForm } from './FlowerForm'\nimport { FlowerMessage } from './FlowerMessage'\n\nconst url = \"https://flowers-mock-data.firebaseio.com/comments/TheresaUlwahn\"\n\nexport const FlowerInfo = () => {\n  const { flowerId } = useParams()\n  const [flower, setFlower] = useState([])\n  const [flowerMessages, setFlowerMessages] = useState([])\n  const [postedMessage, setPostedMessage] = useState(\"\")\n\n  useEffect(() => {\n    fetch(`https://flowers-mock-data.firebaseio.com/flowers/${flowerId}.json`)\n      .then((res) => res.json())\n      .then((json) => {\n        setFlower(json)\n      })\n  }, [flowerId])\n\n  useEffect(() => {\n    fetch(`https://flowers-mock-data.firebaseio.com/comments/TheresaUlwahn/${flowerId}.json`)\n      .then((res) => res.json())\n      .then((json) => {\n        // console.log('All messages for the flower: ', json)\n        if (json !== null) {\n          setFlowerMessages(json)\n        }\n      })\n  }, [postedMessage])\n\n  const handleFormSubmit = (flowerId, message) => {\n    console.log('POSTA DET HÄR MEDDELANDET: ', message, 'FÖR BLOMMA: ', flowerId);\n\n    fetch(url + `/${flowerId}/.json`, {\n      method: \"POST\",\n      body: JSON.stringify({ message }),\n      headers: { \"Content-Type\": \"application/json\" }\n    })\n      .then(() => {\n        console.log('postat!')\n        window.location.reload();\n      })\n      .catch(err => console.log(\"error:\", err))\n  }\n\n  var result = Object.keys(flowerMessages).map(function (key) {\n    return [key, flowerMessages[key]];\n  });\n\n  return (\n    <section className=\"infoContainer\">\n      {/*BACKGROUND IMAGE*/}\n      < div className=\"backDrop\" style={{ backgroundImage: `url(${flower.cover_image})` }} alt={flower.latin_name} />\n        \n       \n      {/*INFOBOX ABOUT EVERY FLOWER INCLUDING THE FORM AND MESSAGES*/}\n      {/* LINK & SVG FOR GO BACK BUTTON */}\n      <Link className=\"backLink\" to={`/`}>\n          <svg className=\"backLinkImg\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 30 30\">\n            <path d=\"M27 14.5C27 7.596441 21.4035594 2 14.5 2S2 7.596441 2 14.5 7.5964406 27 14.5 27 27 21.403559 27 14.5zm-19.3388348-.353553l7.4852814-7.485282c.1952622-.195262.5118446-.195262.7071068 0l2.1213203 2.121321c.1952622.195262.1952622.511844 0 .707106L12.9644661 14.5l5.0104076 5.010408c.1952622.195262.1952622.511844 0 .707106l-2.1213203 2.121321c-.1952622.195262-.5118446.195262-.7071068 0l-7.4852814-7.485282c-.19799-.19799-.197989-.509117 0-.707106z\" fill=\"#fff\" fillRule=\"evenodd\"></path></svg>\n          <p>All flowers</p>\n        </Link>\n        \n      <div className=\"infoBox\">\n         {/*TEXTINFO*/}\n         <div className=\"titleInfo\">\n          <h3 className=\"flowerTitle\">{flower.common_name}\n            <p className=\"flowerVotes\">{flower.notes}</p>\n          </h3>\n          <p>{flower.blooming_season}</p>\n        </div>\n        <FlowerForm className=\"flowerForm\" onFormSubmit={handleFormSubmit} />\n          {result.map(flowerMessage => (\n        <FlowerMessage key={flowerMessage[0]} flowerMessage={flowerMessage[1]} />\n        ))}\n        \n      </div>\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}